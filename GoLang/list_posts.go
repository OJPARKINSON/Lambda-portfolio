package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/joho/godotenv"
)

func getEnv() {
	err := godotenv.Load("../.env")

	if err != nil {
		log.Fatalf("Error loading .env file")
	}
}

func cmcsa() {
	getEnv()
	// var priceAndProfit []string
	// apiKey := os.Getenv("apiKey")
	// apiSec := os.Getenv("apiSec")
	// token := os.Getenv("token")
	// sellPrice, ammount := 27.26, 330.0
	// options := "&types=quote,news,chart&range=1m&last=10"

	resp, err := http.Get("https://api.coinbase.com/v2/exchange-rates?currency=USD")

	if err != nil {
		log.Fatal(err)
		// return priceAndProfit, err
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}

	type AutoGenerated struct {
		Data struct {
			Currency string `json:"currency"`
			Rates    struct {
				GBP string `json:GBP`
			} `json:"rates"`
		} `json:"data"`
	}

	data := AutoGenerated{}
	json.Unmarshal([]byte(body), &data)

	fmt.Println(data.Data.Rates)

	// return priceAndProfit, nil
}

func main() {
	// CMCSAPrice, err := cmcsa()
	cmcsa()
	// if err != nil {
	// 	log.Fatal(err)
	// }
	// fmt.Println("£" + CMCSAPrice[0])
	// fmt.Println("£" + CMCSAPrice[1])
}
