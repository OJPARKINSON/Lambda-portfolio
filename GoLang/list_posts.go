package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/joho/godotenv"
)

type AutoGenerated struct {
	Data struct {
		Currency string `json:"currency"`
		Amount   string `json: amount`
		Rates    struct {
			GBP string `json:GBP`
		} `json:"rates"`
	} `json:"data"`
}

func getEnv() {
	err := godotenv.Load("../.env")

	if err != nil {
		log.Fatalf("Error loading .env file")
	}
}

func coinbaseRequest(url string) AutoGenerated {
	// var priceAndProfit []string
	// apiKey := os.Getenv("apiKey")
	// apiSec := os.Getenv("apiSec")
	// token := os.Getenv("token")
	// sellPrice, ammount := 27.26, 330.0
	// options := "&types=quote,news,chart&range=1m&last=10"
	resp, err := http.Get("https://api.coinbase.com/v2" + url)
	if err != nil {
		log.Fatal(err)
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}

	respJSON := AutoGenerated{}
	json.Unmarshal([]byte(body), &respJSON)

	return respJSON
}

func main() {
	getEnv()
	exchangeRates := coinbaseRequest("/exchange-rates?currency=USD")
	xrpPrice := coinbaseRequest("/prices/XRP-GBP/buy")

	fmt.Println("£" + exchangeRates.Data.Rates.GBP)
	fmt.Println("£" + xrpPrice.Data.Amount)
}
